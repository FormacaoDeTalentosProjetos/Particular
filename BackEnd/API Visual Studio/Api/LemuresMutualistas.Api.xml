<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Api</name>
    </assembly>
    <members>
        <member name="M:Api.Controllers.LoginController.Get">
            <summary>
            MÉTODO QUE OBTÉM UMA LISTA DOS "LOGINS"
            </summary>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.LoginController.GetId(System.Int32)">
            <summary>
            MÉTODO QUE OBTÉM UM "LOGIN" POR {ID}
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.LoginController.GetLoginUser(System.String)">
            <summary>
            MÉTODO QUE OBTÉM UM "LOGIN" POR {USERNAME}
            </summary>
            <param name="unsername"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.LoginController.GetLogin(System.String,System.String)">
            <summary>
            MÉTODO QUE VALIDA O LOGIN POR {USERNAME}) E {SENHA}
            </summary>
            <param name="unsername"></param>
            <param name="senha"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.LoginController.PutSenha(System.Int32,Api.Model.LoginInput)">
            <summary>
            MÉTODO QUE ALTERA SENHA DO "LOGIN" POR {ID}
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.LoginController.PutLoginUser(System.Int32,Api.Model.LoginInput)">
            <summary>
            MÉTODO QUE ALTERA "USERNAME" DO "LOGIN" POR {ID}
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.LoginController.Delete(System.Int32)">
            <summary>
            MÉTODO QUE EXCLUI UM "LOGIN" POR {ID}
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="F:Api.Controllers.MembroSquadController._membroNegocio">
            <summary>
            Declara as regras de negócio para o membro.
            </summary>
        </member>
        <member name="M:Api.Controllers.MembroSquadController.#ctor">
            <summary>
            Construtor para instanciar as regras de negócio.
            </summary>
        </member>
        <member name="M:Api.Controllers.MembroSquadController.Get">
            <summary>
            Método que obtêm todos as vinculações entre Membro e Squad.
            </summary>
            <returns></returns>
            <response code="200">OK</response>
            <response code="404">NotFoud</response>
        </member>
        <member name="M:Api.Controllers.MembroSquadController.GetId(System.Int32)">
            <summary>
            Método que obtêm uma vinculação entre Membro e Squad.
            </summary>
            <param name="id">Usado para selecionar a vinculação.</param>
            <returns></returns>
            <remarks>Obtêm uma vinculação entre membro e squad através do Id informado.</remarks>
            <response code="200">OK</response>
            <response code="404">NotFoud</response>
        </member>
        <member name="M:Api.Controllers.MembroSquadController.Post(Api.Model.MembroSquadInput)">
            <summary>
            Método que insere uma vinculação entre Membro e Squad.
            </summary>
            <param name="input">Objeto com os dados da vinculação.</param>
            <returns></returns>
            <response code="201">Created</response>
            <response code="400">BadRequest</response>
            <response code="500">InternalServerError</response>
        </member>
        <member name="M:Api.Controllers.MembroSquadController.Put(System.Int32,Api.Model.MembroSquadInput)">
            <summary>
            Método que altera os dados de uma vinculação entre Membro e Squad.
            </summary>
            <param name="id">Usado para selecionar a vinculação.</param>
            <param name="input">Objeto que contêm os dados a serem alterados.</param>
            <returns></returns>
            <response code="202">Accepted</response>
            <response code="400">BadRequest</response>
            <response code="500">InternalServerError</response>
        </member>
        <member name="M:Api.Controllers.MembroSquadController.Delete(System.Int32)">
            <summary>
            Método que deleta uma vinculação entre Membro e Squad.
            </summary>
            <param name="id">Usado para selecionar a vinculação.</param>
            <returns></returns>
            <response code="200">OK</response>
            <response code="404">NotFound</response>
        </member>
        <member name="F:Api.Controllers.MembroTriboController._membroNegocio">
            <summary>
            Declara as regras de negócio para o membroTribo.
            </summary>
        </member>
        <member name="M:Api.Controllers.MembroTriboController.#ctor">
            <summary>
            Construtor para instanciar as regras de negócio.
            </summary>
        </member>
        <member name="M:Api.Controllers.MembroTriboController.Get">
            <summary>
            Método que obtêm todos as vinculações entre Membro e Tribo.
            </summary>
            <returns></returns>
            <response code="200">OK</response>
            <response code="404">NotFoud</response>
        </member>
        <member name="M:Api.Controllers.MembroTriboController.GetId(System.Int32)">
            <summary>
            Método que obtêm uma vinculação entre Membro e Tribo.
            </summary>
            <param name="id">Usado para selecionar a vinculação.</param>
            <returns></returns>
            <remarks>Obtêm uma vinculação entre membro e Tribo através do Id informado.</remarks>
            <response code="200">OK</response>
            <response code="404">NotFoud</response>
        </member>
        <member name="M:Api.Controllers.MembroTriboController.Post(Api.Model.MembroTriboInput)">
            <summary>
            Método que insere uma vinculação entre Membro e Tribo.
            </summary>
            <param name="input">Objeto com os dados da vinculação.</param>
            <returns></returns>
            <response code="201">Created</response>
            <response code="400">BadRequest</response>
            <response code="500">InternalServerError</response>
        </member>
        <member name="M:Api.Controllers.MembroTriboController.Put(System.Int32,Api.Model.MembroTriboInput)">
            <summary>
            Método que altera os dados de uma vinculação entre Membro e Tribo.
            </summary>
            <param name="id">Usado para selecionar a vinculação.</param>
            <param name="input">Objeto que contêm os dados a serem alterados.</param>
            <returns></returns>
            <response code="202">Accepted</response>
            <response code="400">BadRequest</response>
            <response code="500">InternalServerError</response>
        </member>
        <member name="M:Api.Controllers.MembroTriboController.Delete(System.Int32)">
            <summary>
            Método que deleta uma vinculação entre Membro e Tribo.
            </summary>
            <param name="id">Usado para selecionar a vinculação.</param>
            <returns></returns>
            <response code="200">OK</response>
            <response code="404">NotFound</response>
        </member>
        <member name="M:Api.Controllers.MentorSquadController.Get">
            <summary>
            MÉTODO QUE OBTÉM UMA LISTADE ASSOCIAÇÕES "MENTOR_SQUAD"
            </summary>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.MentorSquadController.GetId(System.Int32)">
            <summary>
            MÉTODO QUE OBTÉM UMA ASSOCIAÇÃO "MENTOR_SQUAD" POR {ID}
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.MentorSquadController.Post(Api.Model.MentorSquadInput)">
            <summary>
            MÉTODO QUE INSERE UMA ASSOCIAÇÃO "MENTOR_SQUAD"
            </summary>
            <param name="Input"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.MentorSquadController.PutPapel(System.Int32,Api.Model.MentorSquadInput)">
            <summary>
            MÉTODO QUE ALTERA UMA ASSOCIAÇÃO "MENTOR_SQUAD" POR {ID}
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.MentorSquadController.Delete(System.Int32)">
            <summary>
            MÉTODO QUE EXCLUI UMA ASSOCIAÇÃO "MENTOR_SQUAD" POR {ID}
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.MentorTriboController.Get">
            <summary>
            MÉTODO QUE OBTÉM UMA LISTADE ASSOCIAÇÕES "MENTOR_TRIBO"
            </summary>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.MentorTriboController.GetId(System.Int32)">
            <summary>
            MÉTODO QUE OBTÉM UMA ASSOCIAÇÃO "MENTOR_TRIBO" POR {ID}
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.MentorTriboController.Post(Api.Model.MentorTriboInput)">
            <summary>
            MÉTODO QUE INSERE UMA ASSOCIAÇÃO "MENTOR_TRIBO"
            </summary>
            <param name="Input"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.MentorTriboController.PutPapel(System.Int32,Api.Model.MentorTriboInput)">
            <summary>
            MÉTODO QUE ALTERA UMA ASSOCIAÇÃO "MENTOR_TRIBO" POR {ID}
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.MentorTriboController.Delete(System.Int32)">
            <summary>
            MÉTODO QUE EXCLUI UMA ASSOCIAÇÃO "MENTOR_TRIBO" POR {ID}
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="F:Api.Controllers.PaisController._paisNegocio">
            <summary>
            Declara as regras de negócio para o país.
            </summary>
        </member>
        <member name="M:Api.Controllers.PaisController.#ctor">
            <summary>
            Construtor para instanciar as regras de negócio.
            </summary>
        </member>
        <member name="M:Api.Controllers.PaisController.Get">
            <summary>
            Método que obtêm todos os paises.
            </summary>
            <returns></returns>
            <response code="200">OK</response>
            <response code="404">NotFoud</response>
        </member>
        <member name="M:Api.Controllers.PaisController.GetId(System.Int32)">
            <summary>
            Método que obtêm um país.
            </summary>
            <param name="id">Usado para selecionar o país.</param>
            <returns></returns>
            <remarks>Obtêm um país através do Id informado.</remarks>
            <response code="200">OK</response>
            <response code="404">NotFoud</response>
        </member>
        <member name="M:Api.Controllers.PaisController.GetNome(System.String)">
            <summary>
            Método que obtêm um país.
            </summary>
            <param name="nome">Usado para selecionar o país.</param>
            <returns></returns>
            <remarks>Obtêm um país através do Nome informado.</remarks>
            <response code="200">OK</response>
            <response code="404">NotFoud</response>
        </member>
        <member name="M:Api.Controllers.PaisController.Post(Api.Model.PaisInput)">
            <summary>
            Método que insere um país.
            </summary>
            <param name="input">Objeto com os dados do país.</param>
            <returns></returns>
            <response code="201">Created</response>
            <response code="400">BadRequest</response>
            <response code="500">InternalServerError</response>
        </member>
        <member name="M:Api.Controllers.PaisController.Put(System.Int32,Api.Model.PaisInput)">
            <summary>
            Método que altera os dados de um país.
            </summary>
            <param name="id">Usado para selecionar o país.</param>
            <param name="input">Objeto que contêm os dados a serem alterados.</param>
            <returns></returns>
            <response code="202">Accepted</response>
            <response code="400">BadRequest</response>
            <response code="500">InternalServerError</response>
        </member>
        <member name="M:Api.Controllers.PaisController.Delete(System.Int32)">
            <summary>
            Método que deleta um país.
            </summary>
            <param name="id">Usado para selecionar o país.</param>
            <returns></returns>
            <response code="200">OK</response>
            <response code="404">NotFound</response>
        </member>
        <member name="M:Api.Controllers.PapelController.Get">
            <summary>
            MÉTODO QUE OBTÉM UMA LISTA DOS "PAPEIS"
            </summary>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.PapelController.GetId(System.Int32)">
            <summary>
            MÉTODO QUE OBTÉM UM "PAPEL" POR {ID}
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.PapelController.GetPapel(System.String)">
            <summary>
            MÉTODO QUE OBTÉM UM "PAPEL" PELO {NOME}
            </summary>
            <param name="desc"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.PapelController.Post(Api.Model.PapelInput)">
            <summary>
            MÉTODO QUE INSERE UM "PAPEL"
            </summary>
            <param name="Input"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.PapelController.PutPapel(System.Int32,Api.Model.PapelInput)">
            <summary>
            MÉTODO QUE ALTERA UM "PAPEL" POR {ID}
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.PapelController.Delete(System.Int32)">
            <summary>
            MÉTODO QUE EXCLUI UM "PAPEL" POR {ID}
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.SquadController.Get">
            <summary>
            MÉTODO QUE OBTÉM UMA LISTA DAS "SQUADS"
            </summary>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.SquadController.GetId(System.Int32)">
            <summary>
            MÉTODO QUE OBTÉM UMA "SQUAD" POR {ID}
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.SquadController.GetSquad(System.String)">
            <summary>
            MÉTODO QUE OBTÉM UMA "SQUAD" PELO {NOME}
            </summary>
            <param name="nome"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.SquadController.Post(Api.Model.SquadInput)">
            <summary>
            MÉTODO QUE INSERE UMA "SQUAD"
            </summary>
            <param name="Input"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.SquadController.PutSquad(System.Int32,Api.Model.SquadInput)">
            <summary>
            MÉTODO QUE ALTERA UMA "SQUAD" POR {ID}
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.SquadController.PutRemoveTribo(System.Int32,Api.Model.SquadInput)">
            <summary>
            MÉTODO QUE RETIRA ASSOCIÇÃO COM "TRIBO" POR {ID}
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.SquadController.PutAtivoInativo(System.Int32,Api.Model.SquadInput)">
            <summary>
            MÉTODO QUE ALTERA STATUS DA "SQUAD" POR {ID} (ATIVO/INATIVO)
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.SquadController.Delete(System.Int32)">
            <summary>
            MÉTODO QUE EXCLUI UMA "SQUAD" POR {ID}
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.TriboController.Get">
            <summary>
            MÉTODO QUE OBTÉM UMA LISTA DAS "TRIBOS"
            </summary>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.TriboController.GetId(System.Int32)">
            <summary>
            MÉTODO QUE OBTÉM UMA "TRIBO" POR {ID}
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.TriboController.GetTribo(System.String)">
            <summary>
            MÉTODO QUE OBTÉM UMA "TRIBO" PELO {NOME}
            </summary>
            <param name="nome"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.TriboController.Post(Api.Model.TriboInput)">
            <summary>
            MÉTODO QUE INSERE UMA "TRIBO"
            </summary>
            <param name="Input"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.TriboController.PutTribo(System.Int32,Api.Model.TriboInput)">
            <summary>
            MÉTODO QUE ALTERA UMA "TRIBO" POR {ID}
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.TriboController.PutAtivoInativo(System.Int32,Api.Model.TriboInput)">
            <summary>
            MÉTODO QUE ALTERA STATUS DA "TRIBO" POR {ID} (ATIVO/INATIVO)
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.TriboController.Delete(System.Int32)">
            <summary>
            MÉTODO QUE EXCLUI UMA "TRIBO" POR {ID}
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="F:Api.Controllers.UnidadeController._unidadeNegocio">
            <summary>
            Declara as regras de negócio para a unidade.
            </summary>
        </member>
        <member name="M:Api.Controllers.UnidadeController.#ctor">
            <summary>
            Construtor para instanciar as regras de negócio.
            </summary>
        </member>
        <member name="M:Api.Controllers.UnidadeController.Get">
            <summary>
            Método que obtêm todos as unidades.
            </summary>
            <returns></returns>
            <response code="200">OK</response>
            <response code="404">NotFoud</response>
        </member>
        <member name="M:Api.Controllers.UnidadeController.GetId(System.Int32)">
            <summary>
            Método que obtêm uma unidade.
            </summary>
            <param name="id">Usado para selecionar a unidade.</param>
            <returns></returns>
            <remarks>Obtêm uma unidade através do Id informado.</remarks>
            <response code="200">OK</response>
            <response code="404">NotFoud</response>
        </member>
        <member name="M:Api.Controllers.UnidadeController.GetNome(System.String)">
            <summary>
            Método que obtêm uma unidade.
            </summary>
            <param name="nome">Usado para selecionar a unidade.</param>
            <returns></returns>
            <remarks>Obtêm uma unidade através do Nome informado.</remarks>
            <response code="200">OK</response>
            <response code="404">NotFoud</response>
        </member>
        <member name="M:Api.Controllers.UnidadeController.Post(Api.Model.UnidadeInput)">
            <summary>
            Método que insere uma unidade.
            </summary>
            <param name="input">Objeto com os dados da unidade.</param>
            <returns></returns>
            <response code="201">Created</response>
            <response code="400">BadRequest</response>
            <response code="500">InternalServerError</response>
        </member>
        <member name="M:Api.Controllers.UnidadeController.Put(System.Int32,Api.Model.UnidadeInput)">
            <summary>
            Método que altera os dados de uma unidade.
            </summary>
            <param name="id">Usado para selecionar a unidade.</param>
            <param name="input">Objeto que contêm os dados a serem alterados.</param>
            <returns></returns>
            <response code="202">Accepted</response>
            <response code="400">BadRequest</response>
            <response code="500">InternalServerError</response>
        </member>
        <member name="M:Api.Controllers.UnidadeController.Delete(System.Int32)">
            <summary>
            Método que deleta uma unidade.
            </summary>
            <param name="id">Usado para selecionar a unidade.</param>
            <returns></returns>
            <response code="200">OK</response>
            <response code="404">NotFound</response>
        </member>
        <member name="M:Api.Controllers.UserController.Get">
            <summary>
            MÉTODO QUE OBTÉM UMA LISTA DOS "USUÁRIOS"
            </summary>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.UserController.GetAtivos">
            <summary>
            MÉTODO QUE OBTÉM UMA LISTA DOS "USUÁRIOS" ATIVOS
            </summary>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.UserController.GetId(System.Int32)">
            <summary>
            MÉTODO QUE OBTÉM UM "USUÁRIO" POR {ID}
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.UserController.GetUser(System.String)">
            <summary>
            MÉTODO QUE OBTÉM UM "USUÁRIO" POR {NOME} OU PARTE DO {NOME}
            </summary>
            <param name="nome"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.UserController.GetPapel(System.Int32)">
            <summary>
            MÉTODO QUE OBTÉM UM "USUÁRIO" POR RESPONSABILIDADE {PAPEL}
            </summary>
            <param name="IdPapel"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.UserController.Post(Api.Model.UserInput)">
            <summary>
            MÉTODO QUE INSERE UM "USUÁRIO"
            </summary>
            <param name="Input"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.UserController.PutPerfil(System.Int32,Api.Model.UserInput)">
            <summary>
            MÉTODO QUE ALTERA DADOS DO "USUÁRIO" POR {ID}
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.UserController.PutAtivoInativo(System.Int32,Api.Model.UserInput)">
            <summary>
            MÉTODO QUE ALTERA STATUS DO "USUÁRIO" POR {ID} (ATIVO/INATIVO)
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.UserController.Delete(System.Int32)">
            <summary>
            MÉTODO QUE EXCLUI UM "USUÁRIO" POR {ID}
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:Api.Startup.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment,System.IServiceProvider)">
            <summary>
            
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
